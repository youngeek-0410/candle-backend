openapi: 3.0.3
info:
  title: Candle Backend API
  version: 1.0.0
  description: API for creating and managing rooms.
servers:
  - url: https://ehdkqepk7h.execute-api.ap-northeast-1.amazonaws.com/prod
    description: Production server (@kathmandu777)
paths:
  /questions:
    get:
      summary: Get questions
      responses:
        "200":
          description: List of questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        question_id:
                          type: integer
                        statement:
                          type: string
                example:
                  questions:
                    - question_id: 1
                      statement: "好きな漫画は"
                    - question_id: 2
                      statement: "誕生月は"
                    - question_id: 3
                      statement: "好きな果物は"

  /room:
    post:
      summary: Create a new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                room_id:
                  type: string
                  description: Room ID
                  example: youngeek
      responses:
        "201":
          description: Room created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: string
                    example: youngeek
        "400":
          description: Invalid input
        "409":
          description: Room is already in use

  /room/{room_id}:
    post:
      summary: Enter a room
      parameters:
        - name: room_id
          in: path
          required: true
          description: Unique identifier of the room
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: Nickname of the user
                answers:
                  type: array
                  items:
                    type: object
                    required:
                      - question_id
                      - answer
                    properties:
                      question_id:
                        type: string
                        description: Unique identifier of the question
                      answer:
                        type: boolean
                        description: Answer to the question
      responses:
        "200":
          description: Entered the room successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    example: 0DF553D94DF68P
        "400":
          description: Invalid input
        "404":
          description: Room not found

  /room/{room_id}/start:
    post:
      summary: Start the room and distribute roles
      parameters:
        - name: room_id
          in: path
          required: true
          description: Unique identifier of the room
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: 0DF553D94DF68P
      responses:
        "200":
          description: user information including user id, role, and candle
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  is_santa:
                    type: boolean
                  question:
                    type: object
                    properties:
                      question_id:
                        type: string
                      statement:
                        type: string
        "404":
          description: Room not found
  /room/{room_id}/result/{user_id}:
    get:
      summary: Get final results
      parameters:
        - name: room_id
          in: path
          required: true
          description: Unique identifier of the room
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved results
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Santa won or the citizens won
                  candles:
                    type: array
                    description: Number of fired candles
                    items:
                      type: object
                      properties:
                        candle_id:
                          type: string
                          description: candle id
                        user:
                          type: object
                          properties:
                            user_name:
                              type: string
                            is_santa:
                              type: boolean
        "404":
          description: Results not found
  /room/{room_id}/result:
    post:
      summary: Submit fire count for tallying
      parameters:
        - name: room_id
          in: path
          required: true
          description: Unique identifier of the room
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - fire_user_id
                - question_id
              properties:
                user_id:
                  type: string
                  description: Unique identifier of the user
                fire_user_id:
                  type: string
                  description: Unique identifier of the user
                question_id:
                  type: string
                  description: Unique identifier of the question
      responses:
        "200":
          description: tallying successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  fired:
                    type: boolean
                    description: fired or non-fired?
        "400":
          description: Invalid input
components:
  schemas:
    Room:
      type: object
      properties:
        room_id:
          type: string
        participants:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        user_id:
          type: string
        answer:
          type: object
        is_santa:
          type: boolean
        candle:
          type: array
          items:
            type: string
        fire_count:
          type: integer
